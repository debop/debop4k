/*
 * Copyright (c) 2016. sunghyouk.bae@gmail.com
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {

    ext.kotlinVersion = '1.0.2-1'

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
    }
}

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'

    group = 'com.github.debop'
    version = '0.0.1-SNAPSHOT'

    ext.springVersion = '4.3.0.RELEASE'
    ext.funktionaleVersion = '0.8'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'


    if (name.endsWith("jdk8")) {
        println("Project ${name} set to JDK 8")
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    } else if (name.endsWith("jdk7")) {
        println("Project ${name} set to JDK 7")
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    } else if (name.endsWith("jdk6")) {
        println("Project ${name} set to JDK 6")
        sourceCompatibility = JavaVersion.VERSION_1_6
        targetCompatibility = JavaVersion.VERSION_1_6
    } else {
        println("Project ${name} set to JDK 8 (default, likely pom-only project)")
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    compileTestJava {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    sourceSets {
        main.java.srcDirs = ['src/java']
        main.kotlin.srcDirs = ['src/kotlin']
        main.resources.srcDirs = ['src/resources']

        test.java.srcDirs = ['test/java']
        test.kotlin.srcDirs = ['test/kotlin']
        test.resources.srcDirs = ['test/resources']
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true
        options.compilerArgs << '-Xlint:unchecked'
    }

    idea.module {
        downloadJavadoc = false
        downloadSources = true
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://dl.bintray.com/kotlin/exposed" }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

        compile 'org.slf4j:slf4j-api:1.7.+'
        runtime 'ch.qos.logback:logback-classic:1.1.+'
        compile 'javax.inject:javax.inject:1'

        testCompile 'junit:junit:4.12'
        testCompile 'org.assertj:assertj-core:3.4.1'
        testCompile 'org.assertj:assertj-joda-time:2.0.0'
        testCompile 'io.kotlintest:kotlintest:1.2.0'
    }
}

defaultTasks 'clean', 'jar'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

test {
    jvmArgs "-XX:MaxPermSize=512m"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}







